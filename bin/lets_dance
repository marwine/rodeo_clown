#!/usr/bin/env ruby

require "./lib/rodeo_clown"


def print_instructions
  puts "RACK_ENV=test lets_dance! /path/to/yml role"
  exit 1 
end

def deploy_to(instances)
  unless deployment["deploy"]
    puts "Skipping deployment"
    return
  end

  instances.each do |instance|

    puts "Waiting for ssh"
    print "." until instance.ssh_open?
    puts

    options = {
      env: {
        "DOMAIN" => instance.dns_name,
        "APP"    => deployment["app"]
      },
      :setup   => deployment["setup"],
      :strategy => "mina",
    }
    RodeoClown::Deploy.on(options)
  end
end

begin
  env     = ENV["RACK_ENV"] ||= "development"
  role    = ARGV[1] 
  options = YAML.load_file("./ranch_hands.yml")[env][role]
  deployment = options.delete "deployment"
rescue 
  print_instructions
end





rc = RodeoClown::EC2.new

# Build the first one
rc.many_from_options(options.merge(count: 1))
instances = rc.build_instances(1) # Build one
# deploy_to instances Deploy!
puts "Primary Instance built"
image = instances.first.create_image("whats_in_a_name#{instances.first.id}")
puts "Primary Image build #{image.id}"

puts "Ready to build more images? Hit any key"
options["image_id"] = image.id

rc.many_from_options(options)

# Build first
instances = rc.build_instances

puts instances.map &:id


puts "Apps Deploy"
